{
    "cs-1": {
        "id": "cs-1",
        "course_id": "CS 1",
        "name": "Introduction to Computer Programming",
        "units": "9 units (3-4-2)",
        "terms": "first, third terms",
        "description": "A course on computer programming emphasizing the program design process and pragmatic programming skills. It will use the Python programming language and will not assume previous programming experience. Material covered will include data types, variables, assignment, control structures, functions, scoping, compound data, string processing, modules, basic input/output (terminal and file), as well as more advanced topics such as recursion, exception handling and object-oriented programming. Program development and maintenance skills including debugging, testing, and documentation will also be taught. Assignments will include problems drawn from fields such as graphics, numerics, networking, and games. At the end of the course, students will be ready to learn other programming languages in courses such as CS 11, and will also be ready to take more in-depth courses such as CS 2 and CS 4.",
        "offered": true,
        "instructors": "Blank, Vanier",
        "link": "https://www.catalog.caltech.edu/current/2024-25/department/cs/#introduction-to-computer-programming",
        "prereq_text": "",
        "prereqs": []
    },
    "cs-1-x": {
        "id": "cs-1-x",
        "course_id": "CS 1 x",
        "name": "Intermediate Computer Programming",
        "units": "6 units (2-2-2)",
        "terms": "first term",
        "description": "Students must be placed into this course via the CS placement test. An intermediate course on computer programming emphasizing the program design process and pragmatic programming skills. It will use the Java programming language and will assume previous programming experience such as an AP CS A course. Material will focus on more advanced topics such as recursion, exception handling and object-oriented programming. Program development and maintenance skills including debugging, testing, and documentation will also be taught. Assignments will include problems drawn from fields such as graphics, numerics, networking, and games. At the end of the course, students will be ready to learn other programming languages in courses such as CS 11, and will also be ready to take more in-depth courses such as CS 2 and CS 4",
        "offered": true,
        "instructors": "Vanier",
        "link": "https://www.catalog.caltech.edu/current/2024-25/department/cs/#intermediate-computer-programming",
        "prereq_text": "Prerequisites: Enrollment by instructor permission only.",
        "prereqs": []
    },
    "cs-2": {
        "id": "cs-2",
        "course_id": "CS 2",
        "name": "Introduction to Programming Methods",
        "units": "9 units (3-5-1)",
        "terms": "second term",
        "description": "CS 2 is a demanding course in programming languages and computer science. Topics covered include data structures, including lists, trees, and graphs; implementation and performance analysis of fundamental algorithms; algorithm design principles, in particular recursion and dynamic programming; Heavy emphasis is placed on the use of compiled languages and development tools, including source control and debugging. The course includes weekly laboratory exercises and projects covering the lecture material and program design. The course is intended to establish a foundation for further work in many topics in the computer science option.",
        "offered": true,
        "instructors": "Blank",
        "link": "https://www.catalog.caltech.edu/current/2024-25/department/cs/#introduction-to-programming-methods",
        "prereq_text": "Prerequisites: CS 1 or equivalent.",
        "prereqs": [
            "cs-1-x",
            "cs-1"
        ]
    },
    "cs-3": {
        "id": "cs-3",
        "course_id": "CS 3",
        "name": "Introduction to Software Design",
        "units": "9 units (2-6-1)",
        "terms": "third term",
        "description": "CS 3 is a practical introduction to designing large programs in a low-level language. Heavy emphasis is placed on documentation, testing, and software architecture. Students will work in teams in two 5-week long projects. In the first half of the course, teams will focus on testing and extensibility. In the second half of the course, teams will use POSIX APIs, as well as their own code from the first five weeks, to develop a large software deliverable. Software engineering topics covered include code reviews, testing and testability, code readability, API design, refactoring, and documentation.",
        "offered": true,
        "instructors": "Blank, Staff",
        "link": "https://www.catalog.caltech.edu/current/2024-25/department/cs/#introduction-to-software-design",
        "prereq_text": "Prerequisites: CS 2 or equivalent.",
        "prereqs": [
            "cs-2"
        ]
    },
    "cs-4": {
        "id": "cs-4",
        "course_id": "CS 4",
        "name": "Fundamentals of Computer Programming",
        "units": "9 units (3-4-2)",
        "terms": "second term",
        "description": "This course gives students the conceptual background necessary to construct and analyze programs, which includes specifying computations, understanding evaluation models, and using major programming language constructs (functions and procedures, conditionals, recursion and looping, scoping and environments, compound data, side effects, higher-order functions and functional programming, and object-oriented programming). It emphasizes key issues that arise in programming and in computation in general, including time and space complexity, choice of data representation, and abstraction management. This course is intended for students with some programming background who want a deeper understanding of the conceptual issues involved in computer programming.",
        "offered": true,
        "instructors": "Vanier",
        "link": "https://www.catalog.caltech.edu/current/2024-25/department/cs/#fundamentals-of-computer-programming",
        "prereq_text": "Prerequisites: CS 1 or instructor's permission.",
        "prereqs": [
            "cs-1-x",
            "cs-1"
        ]
    },
    "macs-6106-abc": {
        "id": "macs-6106-abc",
        "course_id": "Ma/CS 6/106 abc",
        "name": "Introduction to Discrete Mathematics",
        "units": "9 units (3-0-6)",
        "terms": "first, second, third terms",
        "description": "First term: a survey emphasizing graph theory, algorithms, and applications of algebraic structures. Graphs: paths, trees, circuits, breadth-first and depth-first searches, colorings, matchings. Enumeration techniques; formal power series; combinatorial interpretations. Topics from coding and cryptography, including Hamming codes and RSA. Second term: directed graphs; networks; combinatorial optimization; linear programming. Permutation groups; counting nonisomorphic structures. Topics from extremal graph and set theory, and partially ordered sets. Third term: syntax and semantics of propositional and first-order logic. Introduction to the Godel completeness and incompleteness theorems. Elements of computability theory and computational complexity. Discussion of the P=NP problem.",
        "offered": true,
        "instructors": "T. Yu, Babecki, Ervin",
        "link": "https://www.catalog.caltech.edu/current/2024-25/department/cs/#introduction-to-discrete-mathematics",
        "prereq_text": "Prerequisites: for Ma/CS 6 c, Ma/CS 6 a or Ma 5 a or instructor's permission.",
        "prereqs": [
            "ma-5105-abc",
            "macs-6106-abc"
        ]
    },
    "eecs-10-ab": {
        "id": "eecs-10-ab",
        "course_id": "EE/CS 10 ab",
        "name": "Introduction to Digital Logic and Embedded Systems",
        "units": "6 units (2-3-1)",
        "terms": "second, third terms",
        "description": "This course is intended to give the student a basic understanding of the major hardware and software principles involved in the specification and design of embedded systems. The course will cover basic digital logic, programmable logic devices, CPU and embedded system architecture, and embedded systems programming principles (interfacing to hardware, events, user interfaces, and multi-tasking).",
        "offered": true,
        "instructors": "George",
        "link": "https://www.catalog.caltech.edu/current/2024-25/department/cs/#introduction-to-digital-logic-and-embedded-systems",
        "prereq_text": "",
        "prereqs": []
    },
    "cs-11": {
        "id": "cs-11",
        "course_id": "CS 11",
        "name": "Computer Language Lab",
        "units": "3 units (0-3-0)",
        "terms": "first, second, and third terms",
        "description": "A self-paced lab that provides students with extra practice and supervision in transferring their programming skills to a particular programming language. The course can be used for any language of the student's choosing, subject to approval by the instructor. A series of exercises guide students through the pragmatic use of the chosen language, building their familiarity, experience, and style. More advanced students may propose their own programming project as the target demonstration of their new language skills. This course is available for undergraduate students only. Graduate students should register for CS 111. CS 11 may be repeated for credit of up to a total of nine units.",
        "offered": true,
        "instructors": "Staff",
        "link": "https://www.catalog.caltech.edu/current/2024-25/department/cs/#computer-language-lab",
        "prereq_text": "Prerequisites: CS 1 or instructor's permission.",
        "prereqs": [
            "cs-1-x",
            "cs-1"
        ]
    },
    "cs-12": {
        "id": "cs-12",
        "course_id": "CS 12",
        "name": "Student-Taught Topics in Computing",
        "units": "variable units between 1 and 9",
        "terms": "first, second, third terms",
        "description": "Each section covers a topic in computing with associated sets or projects. Sections are designed and taught by an undergraduate student under the supervision of a CMS faculty member. CS 12 may be repeated for credit of up to a total of nine units.",
        "offered": true,
        "instructors": "Staff",
        "link": "https://www.catalog.caltech.edu/current/2024-25/department/cs/#student-taught-topics-in-computing",
        "prereq_text": "Prerequisites: CS 1 or instructor's permission.",
        "prereqs": [
            "cs-1-x",
            "cs-1"
        ]
    },
    "cs-13": {
        "id": "cs-13",
        "course_id": "CS 13",
        "name": "Mathematical Foundations of Computer Science",
        "units": "9 units (3-0-6)",
        "terms": "first term",
        "description": "This course introduces key mathematical concepts used in computer science, and in particular it prepares students for proof-based CS courses such as CS 21 and CS 38. Mathematical topics are illustrated via applications in Computer Science. CS 1 is a co-requisite as there will be a small number of programming assignments. The course covers basic set theory, induction and inductive structures (e.g., lists and trees), asymptotic analysis, and elementary combinatorics, number theory, and graph theory. Applications include number representation, basic cryptography, basic algorithms on trees, numbers, and polynomials, social network graphs, compression, and simple error-correcting codes.\n Not offered 2024-25.",
        "offered": false,
        "instructors": "Blank",
        "link": "https://www.catalog.caltech.edu/current/2024-25/department/cs/#mathematical-foundations-of-computer-science",
        "prereq_text": "Prerequisites: CS 1.",
        "prereqs": [
            "cs-1-x",
            "cs-1"
        ]
    },
    "cs-19-ab": {
        "id": "cs-19-ab",
        "course_id": "CS 19 ab",
        "name": "Introduction to Computer Science in Industry",
        "units": "2 units (1-0-1)",
        "terms": "first term",
        "description": "This course will introduce students to CS in industry through weekly overview talks by alums and engineers in industry. It is aimed at first and second year undergraduates. Others may wish to take the course to gain an understanding of the scope of computer science in industry. Additionally students will complete short weekly assignments aimed at preparing them for interactions with industry. Graded pass/fail.\n Part b not offered 2024-25.",
        "offered": true,
        "instructors": "Ralph",
        "link": "https://www.catalog.caltech.edu/current/2024-25/department/cs/#introduction-to-computer-science-in-industry",
        "prereq_text": "",
        "prereqs": []
    },
    "cs-21": {
        "id": "cs-21",
        "course_id": "CS 21",
        "name": "Decidability and Tractability",
        "units": "9 units (3-0-6)",
        "terms": "second term",
        "description": "This course introduces the formal foundations of computer science, the fundamental limits of computation, and the limits of efficient computation. Topics will include automata and Turing machines, decidability and undecidability, reductions between computational problems, and the theory of NP-completeness.",
        "offered": true,
        "instructors": "Umans",
        "link": "https://www.catalog.caltech.edu/current/2024-25/department/cs/#decidability-and-tractability",
        "prereq_text": "Prerequisites: CS 2 (may be taken concurrently).",
        "prereqs": [
            "cs-2"
        ]
    },
    "cs-22": {
        "id": "cs-22",
        "course_id": "CS 22",
        "name": "Data Structures & Parallelism",
        "units": "9 units (3-6-0)",
        "terms": "second term",
        "description": "CS 22 is a demanding course that covers implementation, correctness, and analysis of data structures and some parallel algorithms. This course is intended for students who have already taken a data structures course at the level of CS 2. Topics include implementation and analysis of skip lists, trees, hashing, and heaps as well as various algorithms (including string matching, parallel sorting, parallel prefix). The course includes weekly written and programming assignments covering the lecture material.\n Not offered 2024-25.",
        "offered": false,
        "instructors": "Blank",
        "link": "https://www.catalog.caltech.edu/current/2024-25/department/cs/#data-structures-&-parallelism",
        "prereq_text": "Prerequisites: CS 2 or instructor's permission.",
        "prereqs": [
            "cs-2"
        ]
    },
    "cs-24": {
        "id": "cs-24",
        "course_id": "CS 24",
        "name": "Introduction to Computing Systems",
        "units": "9 units (3-3-3)",
        "terms": "first term",
        "description": "Basic introduction to computer systems, including hardware-software interface, computer architecture, and operating systems. Course emphasizes computer system abstractions and the hardware and software techniques necessary to support them, including virtualization (e.g., memory, processing, communication), dynamic resource management, and common-case optimization, isolation, and naming.",
        "offered": true,
        "instructors": "Blank",
        "link": "https://www.catalog.caltech.edu/current/2024-25/department/cs/#introduction-to-computing-systems",
        "prereq_text": "Prerequisites: CS 2 and CS 3.",
        "prereqs": [
            "cs-2",
            "cs-3"
        ]
    },
    "cs-38": {
        "id": "cs-38",
        "course_id": "CS 38",
        "name": "Algorithms",
        "units": "9 units (3-0-6)",
        "terms": "third term",
        "description": "This course introduces techniques for the design and analysis of efficient algorithms. Major design techniques (the greedy approach, divide and conquer, dynamic programming, linear programming) will be introduced through a variety of algebraic, graph, and optimization problems. Methods for identifying intractability (via NP-completeness) will be discussed.",
        "offered": true,
        "instructors": "Mahadev,Ralph",
        "link": "https://www.catalog.caltech.edu/current/2024-25/department/cs/#algorithms",
        "prereq_text": "Prerequisites: CS 2; Ma/CS 6 a or Ma 121 a; and CS 21.",
        "prereqs": [
            "ma-121-ab",
            "cs-21",
            "cs-2",
            "macs-6106-abc"
        ]
    },
    "cs-42": {
        "id": "cs-42",
        "course_id": "CS 42",
        "name": "Computer Science Education in K-14 Settings",
        "units": "6 units (2-2-2)",
        "terms": "second term",
        "description": "This course will focus on computer science education in K-14 settings. Students will gain an understanding of the current state of computer science education within the United States, develop curricula targeted at students from diverse backgrounds, and gain hands on teaching experience. Through readings from educational psychology and neuropsychology, students will become familiar with various pedagogical methods and theories of learning, while applying these in practice as part of a teaching group partnered with a local school or community college. Each week students are expected to spend about 2 hours teaching, 2 hours developing curricula, and 2 hours on readings and individual exercises. Pass/Fail only. May not be repeated.",
        "offered": true,
        "instructors": "Ralph, Wierman",
        "link": "https://www.catalog.caltech.edu/current/2024-25/department/cs/#computer-science-education-in-k-14-settings",
        "prereq_text": "",
        "prereqs": []
    },
    "cseeme-75-abc": {
        "id": "cseeme-75-abc",
        "course_id": "CS/EE/ME 75 abc",
        "name": "Multidisciplinary Systems Engineering",
        "units": "3 units (2-0-1), 6 units (2-0-4), or 9 units (2-0-7) first term; 6 units (2-3-1), 9 units (2-6-1), or 12 units (2-9-1) second and third terms",
        "terms": "first, second, third terms",
        "description": "This course presents the fundamentals of modern multidisciplinary systems engineering in the context of a substantial design project. Students from a variety of disciplines will conceive, design, implement, and operate a system involving electrical, information, and mechanical engineering components. Specific tools will be provided for setting project goals and objectives, managing interfaces between component subsystems, working in design teams, and tracking progress against tasks. Students will be expected to apply knowledge from other courses at Caltech in designing and implementing specific subsystems. During the first two terms of the course, students will attend project meetings and learn some basic tools for project design, while taking courses in CS, EE, and ME that are related to the course project. During the third term, the entire team will build, document, and demonstrate the course design project, which will differ from year to year. First-year undergraduate students must receive permission from the lead instructor to enroll.\n Not offered 2024-25.",
        "offered": false,
        "instructors": "Staff",
        "link": "https://www.catalog.caltech.edu/current/2024-25/department/cs/#multidisciplinary-systems-engineering",
        "prereq_text": "",
        "prereqs": []
    },
    "cs-80-abc": {
        "id": "cs-80-abc",
        "course_id": "CS 80 abc",
        "name": "Undergraduate Thesis",
        "units": "9 units",
        "terms": "first, second, third terms",
        "description": "Individual research project, carried out under the supervision of a member of the computer science faculty (or other faculty as approved by the computer science undergraduate option representative). Projects must include significant design effort. Written report required. Open only to upperclass students. Not offered on a pass/fail basis.",
        "offered": false,
        "instructors": "Staff",
        "link": "https://www.catalog.caltech.edu/current/2024-25/department/cs/#undergraduate-thesis",
        "prereq_text": "Prerequisites: instructor's permission, which should be obtained sufficiently early to allow time for planning the research.",
        "prereqs": []
    },
    "cs-81-abc": {
        "id": "cs-81-abc",
        "course_id": "CS 81 abc",
        "name": "Undergraduate Projects in Computer Science",
        "units": "",
        "terms": "",
        "description": "Supervised research or development in computer science by undergraduates. The topic must be approved by the project supervisor, and a formal final report must be presented on completion of research. This course can (with approval) be used to satisfy the project requirement for the CS major. Graded pass/fail.",
        "offered": true,
        "instructors": "Staff",
        "link": "https://www.catalog.caltech.edu/current/2024-25/department/cs/#undergraduate-projects-in-computer-science",
        "prereq_text": "Prerequisites: Consent of supervisor is required before registering.",
        "prereqs": []
    },
    "cs-90": {
        "id": "cs-90",
        "course_id": "CS 90",
        "name": "Undergraduate Reading in Computer Science",
        "units": "",
        "terms": "",
        "description": "Supervised reading in computer science by undergraduates. The topic must be approved by the reading supervisor, and a formal final report must be presented on completion of the term. Graded pass/fail.",
        "offered": true,
        "instructors": "Staff",
        "link": "https://www.catalog.caltech.edu/current/2024-25/department/cs/#undergraduate-reading-in-computer-science",
        "prereq_text": "Prerequisites: Consent of supervisor is required before registering.",
        "prereqs": []
    },
    "cs-101": {
        "id": "cs-101",
        "course_id": "CS 101",
        "name": "Special Topics in Computer Science",
        "units": "",
        "terms": "Offered by announcement",
        "description": "",
        "offered": true,
        "instructors": "Staff",
        "link": "https://www.catalog.caltech.edu/current/2024-25/department/cs/#special-topics-in-computer-science",
        "prereq_text": "Prerequisites: Prerequisites specified by instructor.",
        "prereqs": []
    },
    "cs-102-abc": {
        "id": "cs-102-abc",
        "course_id": "CS 102 abc",
        "name": "Seminar in Computer Science",
        "units": "3, 6, or 9 units as arranged with the instructor",
        "terms": "",
        "description": "Instructor's permission required.",
        "offered": true,
        "instructors": "Staff",
        "link": "https://www.catalog.caltech.edu/current/2024-25/department/cs/#seminar-in-computer-science",
        "prereq_text": "",
        "prereqs": []
    },
    "cs-103-abc": {
        "id": "cs-103-abc",
        "course_id": "CS 103 abc",
        "name": "Reading in Computer Science",
        "units": "3, 6, or 9 units as arranged with the instructor",
        "terms": "",
        "description": "Instructor's permission required.",
        "offered": true,
        "instructors": "Staff",
        "link": "https://www.catalog.caltech.edu/current/2024-25/department/cs/#reading-in-computer-science",
        "prereq_text": "",
        "prereqs": []
    },
    "hpsplcs-110": {
        "id": "hpsplcs-110",
        "course_id": "HPS/Pl/CS 110",
        "name": "Causation and Explanation",
        "units": "9 units (3-0-6)",
        "terms": "second term",
        "description": "An examination of theories of causation and explanation in philosophy and neighboring disciplines. Topics discussed may include probabilistic and counterfactual treatments of causation, the role of statistical evidence and experimentation in causal inference, and the deductive-nomological model of explanation. The treatment of these topics by important figures from the history of philosophy such as Aristotle, Descartes, and Hume may also be considered.",
        "offered": true,
        "instructors": "Eberhardt",
        "link": "https://www.catalog.caltech.edu/current/2024-25/department/cs/#causation-and-explanation",
        "prereq_text": "",
        "prereqs": []
    },
    "cs-111": {
        "id": "cs-111",
        "course_id": "CS 111",
        "name": "Graduate Programming Practicum",
        "units": "3 units (0-3-0)",
        "terms": "first, second, and third terms",
        "description": "A self-paced lab that provides students with extra practice and supervision in transferring their programming skills to a particular programming language. The course can be used for any language of the student's choosing, subject to approval by the instructor. A series of exercises guide the student through the pragmatic use of the chosen language, building their familiarity, experience, and style. More advanced students may propose their own programming project as the target demonstration of their new language skills. This course is available for graduate students only. CS 111 may be repeated for credit of up to a total of nine units. Undergraduates should register for CS 11.",
        "offered": true,
        "instructors": "Staff",
        "link": "https://www.catalog.caltech.edu/current/2024-25/department/cs/#graduate-programming-practicum",
        "prereq_text": "Prerequisites: CS 1 or equivalent.",
        "prereqs": [
            "cs-1-x",
            "cs-1"
        ]
    },
    "ecacmcs-112": {
        "id": "ecacmcs-112",
        "course_id": "Ec/ACM/CS 112",
        "name": "Bayesian Statistics",
        "units": "9 units (3-0-6)",
        "terms": "second term",
        "description": "This course provides an introduction to Bayesian Statistics and its applications to data analysis in various fields. Topics include: discrete models, regression models, hierarchical models, model comparison, and MCMC methods. The course combines an introduction to basic theory with a hands-on emphasis on learning how to use these methods in practice so that students can apply them in their own work. Previous familiarity with frequentist statistics is useful but not required.",
        "offered": true,
        "instructors": "Rangel",
        "link": "https://www.catalog.caltech.edu/current/2024-25/department/cs/#bayesian-statistics",
        "prereq_text": "Prerequisites: Ma 3, ACM/EE/IDS 116 or equivalent.",
        "prereqs": [
            "acmeeids-116",
            "ma-3103"
        ]
    },
    "cs-115": {
        "id": "cs-115",
        "course_id": "CS 115",
        "name": "Functional Programming",
        "units": "9 units (3-4-2)",
        "terms": "third term",
        "description": "This course is a both a theoretical and practical introduction to functional programming, a paradigm which allows programmers to work at an extremely high level of abstraction while simultaneously avoiding large classes of bugs that plague more conventional imperative and object-oriented languages. The course will introduce and use the lazy functional language Haskell exclusively. Topics include: recursion, first-class functions, higher-order functions, algebraic data types, polymorphic types, function composition, point-free style, proving functions correct, lazy evaluation, pattern matching, lexical scoping, type classes, and modules. Some advanced topics such as monad transformers, parser combinators, dynamic typing, and existential types are also covered.",
        "offered": true,
        "instructors": "Vanier",
        "link": "https://www.catalog.caltech.edu/current/2024-25/department/cs/#functional-programming",
        "prereq_text": "Prerequisites: CS 1 and CS 4.",
        "prereqs": [
            "cs-1-x",
            "cs-4",
            "cs-1"
        ]
    },
    "cs-116": {
        "id": "cs-116",
        "course_id": "CS 116",
        "name": "Reasoning about Program Correctness",
        "units": "9 units (3-0-6)",
        "terms": "first term",
        "description": "This course presents the use of logic and formal reasoning to prove the correctness of sequential and concurrent programs. Topics in logic include propositional logic, basics of first-order logic, and the use of logic notations for specifying programs. The course presents a programming notation and its formal semantics, Hoare logic and its use in proving program correctness, predicate transformers and weakest preconditions, and fixed-point theory and its application to proofs of programs.\n Not offered 2024-25.",
        "offered": false,
        "instructors": "Staff",
        "link": "https://www.catalog.caltech.edu/current/2024-25/department/cs/#reasoning-about-program-correctness",
        "prereq_text": "Prerequisites: CS 1 or equivalent.",
        "prereqs": [
            "cs-1-x",
            "cs-1"
        ]
    },
    "macs-117-abc": {
        "id": "macs-117-abc",
        "course_id": "Ma/CS 117 abc",
        "name": "Computability Theory",
        "units": "9 units (3-0-6)",
        "terms": "first, second terms",
        "description": "Various approaches to computability theory, e.g., Turing machines, recursive functions, Markov algorithms; proof of their equivalence. Church's thesis. Theory of computable functions and effectively enumerable sets. Decision problems. Undecidable problems: word problems for groups, solvability of Diophantine equations (Hilbert's 10th problem). Relations with mathematical logic and the G\u00f6del incompleteness theorems. Decidable problems, from number theory, algebra, combinatorics, and logic. Complexity of decision procedures. Inherently complex problems of exponential and superexponential difficulty. Feasible (polynomial time) computations. Polynomial deterministic vs. nondeterministic algorithms, NP-complete problems and the P = NP question.\n Part c not offered 2024-25.",
        "offered": true,
        "instructors": "Ervin",
        "link": "https://www.catalog.caltech.edu/current/2024-25/department/cs/#computability-theory",
        "prereq_text": "Prerequisites: Ma 5 or equivalent, or instructor's permission.",
        "prereqs": [
            "ma-5105-abc"
        ]
    },
    "cs-118": {
        "id": "cs-118",
        "course_id": "CS 118",
        "name": "Automata-Theoretic Software Analysis",
        "units": "9 units (3-3-3)",
        "terms": "second term",
        "description": "An introduction to the use of automata theory in the formal analysis of both concurrent and sequentially executing software systems. The course covers the use of logic model checking with linear temporal logic and interactive techniques for property-based static source code analysis.\n Not offered 2024-25.",
        "offered": false,
        "instructors": "Staff",
        "link": "https://www.catalog.caltech.edu/current/2024-25/department/cs/#automata-theoretic-software-analysis",
        "prereq_text": "",
        "prereqs": []
    },
    "eecs-119-abc": {
        "id": "eecs-119-abc",
        "course_id": "EE/CS 119 abc",
        "name": "Advanced Digital Systems Design",
        "units": "9 units (3-3-3) first, second term; 9 units (1-8-0) third term",
        "terms": "first, second, third terms",
        "description": "Advanced digital design as it applies to the design of systems using PLDs and ASICs (in particular, gate arrays and standard cells). The course covers both design and implementation details of various systems and logic device technologies. The emphasis is on the practical aspects of ASIC design, such as timing, testing, and fault grading. Topics include synchronous design, state machine design, arithmetic circuit design, application-specific parallel computer design, design for testability, CPLDs, FPGAs, VHDL, standard cells, timing analysis, fault vectors, and fault grading. Students are expected to design and implement both systems discussed in the class as well as self-proposed systems using a variety of technologies and tools.\n Given in alternate years;offered 2024-25.",
        "offered": true,
        "instructors": "George",
        "link": "https://www.catalog.caltech.edu/current/2024-25/department/cs/#advanced-digital-systems-design",
        "prereq_text": "Prerequisites: EE/CS 10 a or CS 24.",
        "prereqs": [
            "eecs-10-ab",
            "cs-24"
        ]
    },
    "csph-120": {
        "id": "csph-120",
        "course_id": "CS/Ph 120",
        "name": "Quantum Cryptography",
        "units": "9 units (3-0-6)",
        "terms": "first term",
        "description": "This course is an introduction to quantum cryptography: how to use quantum effects, such as quantum entanglement and uncertainty, to implement cryptographic tasks with levels of security that are impossible to achieve classically. The course covers the fundamental ideas of quantum information that form the basis for quantum cryptography, such as entanglement and quantifying quantum knowledge. We will introduce the security definition for quantum key distribution and see protocols and proofs of security for this task. We will also discuss the basics of device-independent quantum cryptography as well as other cryptographic tasks and protocols, such as bit commitment or position-based cryptography.\n Not offered 2024-25.",
        "offered": false,
        "instructors": "Staff",
        "link": "https://www.catalog.caltech.edu/current/2024-25/department/cs/#quantum-cryptography",
        "prereq_text": "Prerequisites: Ma 1 b, Ph 2 b or Ph 12 b, CS 21, CS 38 or equivalent recommended (or instructor's permission).",
        "prereqs": [
            "ma-1-abc",
            "ph-2-abc",
            "ma-1-d",
            "ph-12-abc",
            "cs-38",
            "cs-21"
        ]
    },
    "csids-121": {
        "id": "csids-121",
        "course_id": "CS/IDS 121",
        "name": "Relational Databases",
        "units": "9 units (3-0-6)",
        "terms": "second term",
        "description": "Introduction to the basic theory and usage of relational database systems. It covers the relational data model, relational algebra, and the Structured Query Language (SQL). The course introduces the basics of database schema design and covers the entity-relationship model, functional dependency analysis, and normal forms. Additional topics include other query languages based on the relational calculi, data-warehousing and dimensional analysis, writing and using stored procedures, working with hierarchies and graphs within relational databases, and an overview of transaction processing and query evaluation. Extensive hands-on work with SQL databases.",
        "offered": true,
        "instructors": "Hovik",
        "link": "https://www.catalog.caltech.edu/current/2024-25/department/cs/#relational-databases",
        "prereq_text": "Prerequisites: CS 1 or equivalent.",
        "prereqs": [
            "cs-1-x",
            "cs-1"
        ]
    },
    "cs-124": {
        "id": "cs-124",
        "course_id": "CS 124",
        "name": "Operating Systems",
        "units": "12 units (3-6-3)",
        "terms": "third term",
        "description": "This course explores the major themes and components of modern operating systems, such as kernel architectures, the process abstraction and process scheduling, system calls, concurrency within the OS, virtual memory management, and file systems. Students must work in groups to complete a series of challenging programming projects, implementing major components of an instructional operating system. Most programming is in C, although some IA32 assembly language programming is also necessary. Familiarity with the material in CS 24 is strongly advised before attempting this course.\n Not offered 2024-25.",
        "offered": false,
        "instructors": "Pinkston",
        "link": "https://www.catalog.caltech.edu/current/2024-25/department/cs/#operating-systems",
        "prereq_text": "Prerequisites: CS 24.",
        "prereqs": [
            "cs-24"
        ]
    },
    "eecsmede-125": {
        "id": "eecsmede-125",
        "course_id": "EE/CS/MedE 125",
        "name": "Digital Circuit Design with FPGAs and VHDL",
        "units": "9 units (3-6-0)",
        "terms": "third term",
        "description": "Study of programmable logic devices (FPGAs). Detailed study of the VHDL language, accompanied by tutorials of popular synthesis and simulation tools. Review of combinational circuits (both logic and arithmetic), followed by VHDL code for combinational circuits and corresponding FPGA-implemented designs. Review of sequential circuits, followed by VHDL code for sequential circuits and corresponding FPGA-implemented designs. Review of finite state machines, followed by VHDL code for state machines and corresponding FPGA-implemented designs. Final project. The course includes a wide selection of real-world projects, implemented and tested using FPGA boards.\n Not offered 2024-25.",
        "offered": false,
        "instructors": "Staff",
        "link": "https://www.catalog.caltech.edu/current/2024-25/department/cs/#digital-circuit-design-with-fpgas-and-vhdl",
        "prereq_text": "Prerequisites: EE/CS 10 or equivalent.",
        "prereqs": [
            "eecs-10-ab"
        ]
    },
    "eemacs-126-ab": {
        "id": "eemacs-126-ab",
        "course_id": "EE/Ma/CS 126 ab",
        "name": "Information Theory",
        "units": "9 units (3-0-6)",
        "terms": "first, second terms",
        "description": "This class treats Shannon's mathematical theory of communication and the tools used to derive and understand it. The class is organized around fundamental questions and their solutions, leading to central results such as Shannon's source coding, channel coding, and rate-distortion theorems. Quantities that arise en route to these solutions include entropy, relative entropy, and mutual information for discrete and continuous random variables. The course explores the calculation of fundamental communication limits like entropy rate, capacity, and rate-distortion functions under a variety of source and communication channel models (e.g., memoryless, Markov, ergodic, and Gaussian). The course begins with a foundational discussion of the simplest communication scenarios and then expands to include topics like universal source coding, the role of side information in source coding and communications, and the generalization of earlier results to network systems. Network information theory topics include multiuser data compression and communication over multiple access channels, broadcast channels, and multiterminal networks. Philosophical and practical implications of the theory are also explored. This course, when combined with EE 112, EE/Ma/CS/IDS 127, EE/CS 161, and EE/CS/IDS 167, should prepare the student for research in information theory, coding theory, wireless communications, and/or data compression.\n Part b not offered 2024-25",
        "offered": true,
        "instructors": "Effros",
        "link": "https://www.catalog.caltech.edu/current/2024-25/department/cs/#information-theory",
        "prereq_text": "Prerequisites: Ma 3.",
        "prereqs": [
            "ma-3103"
        ]
    },
    "eemacsids-127": {
        "id": "eemacsids-127",
        "course_id": "EE/Ma/CS/IDS 127",
        "name": "Error-Correcting Codes",
        "units": "9 units (3-0-6)",
        "terms": "third term",
        "description": "This course develops from first principles the theory and practical implementation of the most important techniques for combating errors in digital transmission and storage systems. Topics include highly symmetric linear codes, such as Hamming, Reed-Muller, and Polar codes; algebraic block codes, such as Reed-Solomon and BCH codes, including a self-contained introduction to the theory of finite fields; and low-density parity-check codes. Students will become acquainted with encoding and decoding algorithms, design principles and performance evaluation of codes.\n not offered 2024-25.",
        "offered": true,
        "instructors": "Kostina",
        "link": "https://www.catalog.caltech.edu/current/2024-25/department/cs/#error-correcting-codes",
        "prereq_text": "Prerequisites: EE 55 or equivalent.",
        "prereqs": [
            "ee-55"
        ]
    },
    "cs-128": {
        "id": "cs-128",
        "course_id": "CS 128",
        "name": "Interactive Theorem Proving",
        "units": "9 units (3-0-6)",
        "terms": "second term",
        "description": "This course introduces students to the modern practice of interactive tactic-based theorem proving using the Coq theorem prover. Topics will be drawn from logic, programming languages and the theory of computation. Topics will include: proof by induction, lists, higher-order functions, polymorphism, dependently-typed functional programming, constructive logic, the Curry-Howard correspondence, modeling imperative programs, and other topics if time permits. Students will be graded partially on attendance and will be expected to participate in proving theorems in class.",
        "offered": true,
        "instructors": "Vanier",
        "link": "https://www.catalog.caltech.edu/current/2024-25/department/cs/#interactive-theorem-proving",
        "prereq_text": "Prerequisites: CS 4 or instructor's permission.",
        "prereqs": [
            "cs-4"
        ]
    },
    "mecsee-129": {
        "id": "mecsee-129",
        "course_id": "ME/CS/EE 129",
        "name": "Experimental Robotics",
        "units": "9 units (1-7-1)",
        "terms": "third term",
        "description": "",
        "offered": true,
        "instructors": "Niemeyer",
        "link": "https://www.catalog.caltech.edu/current/2024-25/department/cs/#experimental-robotics",
        "prereq_text": "Prerequisites: some experience with (i) Python programming (CS1, CS2, or equivalent), (ii) Hardware, Sensors, and Signal Processing (EE/ME7, ME8, EE1, or similar), and/or (iii) Robotic Devices (ME13, ME72, or related), as evidenced to the instructor.   Not recommended for first-year students.",
        "prereqs": []
    },
    "cs-130": {
        "id": "cs-130",
        "course_id": "CS 130",
        "name": "Software Engineering",
        "units": "9 units (3-3-3)",
        "terms": "second term",
        "description": "This course presents a survey of software engineering principles relevant to all aspects of the software development lifecycle. Students will examine industry best practices in the areas of software specification, development, project management, testing, and release management, including a review of the relevant research literature. Assignments give students the opportunity to explore these topics in depth. Programming assignments use Python and Git, and students should be familiar with Python at a CS 1 level, and Git at a CS 2/CS 3 level, before taking the course.",
        "offered": true,
        "instructors": "Pinkston",
        "link": "https://www.catalog.caltech.edu/current/2024-25/department/cs/#software-engineering",
        "prereq_text": "Prerequisites: CS 2 and CS 3 (or equivalent).",
        "prereqs": [
            "cs-2",
            "cs-3"
        ]
    },
    "cs-131": {
        "id": "cs-131",
        "course_id": "CS 131",
        "name": "Programming Languages",
        "units": "9 units (3-0-6)",
        "terms": "third term",
        "description": "CS 131 is a course on programming languages and their implementation. It teaches students how to program in a number of simplified languages representing the major programming paradigms in use today (imperative, object-oriented, and functional). It will also teach students how to build and modify the implementations of these languages. Emphasis will not be on syntax or parsing but on the essential differences in these languages and their implementations. Both dynamically-typed and statically-typed languages will be implemented. Relevant theory will be covered as needed. Implementations will mostly be interpreters, but some features of compilers will be covered if time permits. Enrollment limited to 30 students.",
        "offered": true,
        "instructors": "Vanier",
        "link": "https://www.catalog.caltech.edu/current/2024-25/department/cs/#programming-languages",
        "prereq_text": "Prerequisites: CS 4.",
        "prereqs": [
            "cs-4"
        ]
    },
    "cs-132": {
        "id": "cs-132",
        "course_id": "CS 132",
        "name": "Web Development",
        "units": "9 units (3-0-6)",
        "terms": "first term",
        "description": "Covers full-stack web development with HTML5, CSS, client-side JS (ES6) and server-side JS (Node.js/Express) for web API development. Concepts including separation of concerns, the client-server relationship, user experience, accessibility, and security will also be emphasized throughout the course. Assignments will alternate between formal and semi-structured student-driven projects, providing students various opportunities to apply material to their individual interests. No prior web development background is required, though students who have prior experience may still benefit from learning best practices and HTML5/ES6 standards.",
        "offered": true,
        "instructors": "Hovik",
        "link": "https://www.catalog.caltech.edu/current/2024-25/department/cs/#web-development",
        "prereq_text": "Prerequisites: CS 1 or equivalent.",
        "prereqs": [
            "cs-1-x",
            "cs-1"
        ]
    },
    "mecsee-133-ab": {
        "id": "mecsee-133-ab",
        "course_id": "ME/CS/EE 133 ab",
        "name": "Robotics",
        "units": "9 units (3-2-4)",
        "terms": "first, second terms",
        "description": "The course develops the core concepts of robotics. The first quarter focuses on classical robotic manipulation, including topics in rigid body kinematics and dynamics. It develops planar and 3D kinematic formulations and algorithms for forward and inverse computations, Jacobians, and manipulability. The second quarter transitions to planning, navigation, and perception. Topics include configuration space, sample-based planners, A* and D* algorithms, to achieve collision-free motions. Course work transitions from homework and programming assignments to more open-ended team-based projects.",
        "offered": true,
        "instructors": "Niemeyer",
        "link": "https://www.catalog.caltech.edu/current/2024-25/department/cs/#robotics",
        "prereq_text": "Prerequisites: ME/CS/EE 129, or Python programming experience, evidenced to instructor.",
        "prereqs": [
            "mecsee-129"
        ]
    },
    "mecsee-134": {
        "id": "mecsee-134",
        "course_id": "ME/CS/EE 134",
        "name": "Robotic Systems",
        "units": "9 units (1-7-1)",
        "terms": "second term",
        "description": "This course builds up, and brings to practice, the elements of robotic systems at the intersection of hardware, kinematics and control, computer vision, and autonomous behaviors. It presents selected topics from these domains, focusing on their integration into a full sense-think-act robot. The lectures will drive team-based projects, progressing from building custom robotic arms (5 to 7 degrees of freedom) to writing all necessary software (utilizing the Robotics Operating system, ROS). Teams are required to implement and customize general concepts for their selected tasks. Working systems will autonomously operate and demonstrate their capabilities during final presentations.",
        "offered": true,
        "instructors": "Niemeyer",
        "link": "https://www.catalog.caltech.edu/current/2024-25/department/cs/#robotic-systems",
        "prereq_text": "Prerequisites: ME/CS/EE 133 a, or with permission of instructor.",
        "prereqs": [
            "mecsee-133-ab"
        ]
    },
    "eecsest-135": {
        "id": "eecsest-135",
        "course_id": "EE/CS/EST 135",
        "name": "Power System Analysis",
        "units": "9 units (3-3-3)",
        "terms": "first term",
        "description": "We are at the beginning of a historic transformation to decarbonize our energy system. This course introduces the basics of power systems analysis: phasor representation, 3-phase transmission system, transmission line models, transformer models, per-unit analysis, network matrix, power flow equations, power flow algorithms, optimal powerflow (OPF) problems, unbalanced power flow analysis and optimization,swing dynamics and stability.",
        "offered": true,
        "instructors": "Low",
        "link": "https://www.catalog.caltech.edu/current/2024-25/department/cs/#power-system-analysis",
        "prereq_text": "Prerequisites: EE 44, Ma 2, or equivalent.",
        "prereqs": [
            "ma-2102",
            "ee-44"
        ]
    },
    "eemacsids-136": {
        "id": "eemacsids-136",
        "course_id": "EE/Ma/CS/IDS 136",
        "name": "Information Theory and Applications",
        "units": "9 units (3-0-6)",
        "terms": "third term",
        "description": "This class introduces information measures such as entropy, information divergence, mutual information, information density, and establishes the fundamental importance of those measures in data compression, statistical inference, and error control. The course does not require a prior exposure to information theory; it is complementary to EE 126a.",
        "offered": true,
        "instructors": "Kostina",
        "link": "https://www.catalog.caltech.edu/current/2024-25/department/cs/#information-theory-and-applications",
        "prereq_text": "Prerequisites: EE 55 or equivalent.",
        "prereqs": [
            "ee-55"
        ]
    },
    "cs-137": {
        "id": "cs-137",
        "course_id": "CS 137",
        "name": "Real-World Algorithm Implementation",
        "units": "12 units (0-3-9)",
        "terms": "third term",
        "description": "This course introduces algorithms in the context of their usage in the real world. The course covers compression, semi-numerical algorithms, RSA cryptography, parsing, and string matching. The goal of the course is for students to see how to use theoretical algorithms in real-world contexts, focusing both on correctness and the nitty-gritty details and optimizations. Students will choose to implement projects based on depth in an area or breadth to cover all the topics.\n Not offered 2024-25.",
        "offered": false,
        "instructors": "Blank",
        "link": "https://www.catalog.caltech.edu/current/2024-25/department/cs/#real-world-algorithm-implementation",
        "prereq_text": "Prerequisites: CS 24.",
        "prereqs": [
            "cs-24"
        ]
    },
    "cs-138": {
        "id": "cs-138",
        "course_id": "CS 138",
        "name": "Computer Algorithms",
        "units": "9 units (3-0-6)",
        "terms": "third term",
        "description": "This course is identical to CS 38. Only graduate students for whom this is the first algorithms course are allowed to register for CS 138. See the CS 38 entry for prerequisites and course description.",
        "offered": true,
        "instructors": "Mahadev, Ralph",
        "link": "https://www.catalog.caltech.edu/current/2024-25/department/cs/#computer-algorithms",
        "prereq_text": "",
        "prereqs": []
    },
    "cmscsids-139": {
        "id": "cmscsids-139",
        "course_id": "CMS/CS/IDS 139",
        "name": "Analysis and Design of Algorithms",
        "units": "12 units (3-0-9)",
        "terms": "first term",
        "description": "This course develops core principles for the analysis and design of algorithms. Basic material includes mathematical techniques for analyzing performance in terms of resources, such as time, space, and randomness. The course introduces the major paradigms for algorithm design, including greedy methods, divide-and-conquer, dynamic programming, linear and semidefinite programming, randomized algorithms, and online learning.\n Not offered 2024-25",
        "offered": false,
        "instructors": "Staff",
        "link": "https://www.catalog.caltech.edu/current/2024-25/department/cs/#analysis-and-design-of-algorithms",
        "prereq_text": "Prerequisites: Ma 2, Ma 3, Ma/CS 6 a, CS 21, CS 38/138, and ACM/EE/IDS 116 or CMS/ACM/EE 122 or equivalent.",
        "prereqs": [
            "ma-3103",
            "cmsacmee-122",
            "acmeeids-116",
            "macs-6106-abc",
            "cs-38",
            "cs-21",
            "ma-2102"
        ]
    },
    "cs-141": {
        "id": "cs-141",
        "course_id": "CS 141",
        "name": "Hack Society: Projects from the Public Sector",
        "units": "9 units (0-0-9)",
        "terms": "third term",
        "description": "There is a large gap between the public and private sectors' effective use of technology. This gap presents an opportunity for the development of innovative solutions to problems faced by society. Students will develop technology-based projects that address this gap. Course material will offer an introduction to the design, development, and analysis of digital technology with examples derived from services typically found in the public sector.\n Not offered 2024-25.",
        "offered": false,
        "instructors": "Ralph",
        "link": "https://www.catalog.caltech.edu/current/2024-25/department/cs/#hack-society:-projects-from-the-public-sector",
        "prereq_text": "Prerequisites: CS/IDS 142, 143, CMS/CS/EE/IDS 144, or permission from instructor.",
        "prereqs": []
    },
    "cseeids-143": {
        "id": "cseeids-143",
        "course_id": "CS/EE/IDS 143",
        "name": "Networks: Algorithms & Architecture",
        "units": "12 units (3-4-5)",
        "terms": "first term",
        "description": "Social networks, the web, and the internet are essential parts of our lives, and we depend on them every day. CS/EE/IDS 143 and CMS/CS/EE/IDS 144 study how they work and the \"big\" ideas behind our networked lives. In this course, the questions explored include: Why is an hourglass architecture crucial for the design of the Internet? Why doesn't the Internet collapse under congestion? How are cloud services so scalable? How do algorithms for wireless and wired networks differ? For all these questions and more, the course will provide a mixture of both mathematical analysis and hands-on labs. The course expects students to be comfortable with graph theory, probability, and basic programming.",
        "offered": true,
        "instructors": "Wierman",
        "link": "https://www.catalog.caltech.edu/current/2024-25/department/cs/#networks:-algorithms-&-architecture",
        "prereq_text": "Prerequisites: Ma 2, Ma 3, Ma/CS 6 a, and CS 38, or instructor permission.",
        "prereqs": [
            "cs-38",
            "ma-2102",
            "macs-6106-abc",
            "ma-3103"
        ]
    },
    "cmscsecee-144": {
        "id": "cmscsecee-144",
        "course_id": "CMS/CS/Ec/EE 144",
        "name": "Networks: Structure & Economics",
        "units": "12 units (3-4-5)",
        "terms": "second term",
        "description": "",
        "offered": true,
        "instructors": "Mazumdar",
        "link": "https://www.catalog.caltech.edu/current/2024-25/department/cs/#networks:-structure-&-economics",
        "prereq_text": "Prerequisites: Ma 2, Ma 3, Ma/CS 6 a, and CS 38, or instructor permission.",
        "prereqs": [
            "cs-38",
            "ma-2102",
            "macs-6106-abc",
            "ma-3103"
        ]
    },
    "csee-145": {
        "id": "csee-145",
        "course_id": "CS/EE 145",
        "name": "Projects in Networking",
        "units": "9 units (0-0-9)",
        "terms": "third term",
        "description": "Students are expected to execute a substantial project in networking, write up a report describing their work, and make a presentation.",
        "offered": true,
        "instructors": "Wierman",
        "link": "https://www.catalog.caltech.edu/current/2024-25/department/cs/#projects-in-networking",
        "prereq_text": "Prerequisites: Either CMS/CS/EE/IDS 144 or CS/IDS 142 in the preceding term, or instructor permission.",
        "prereqs": []
    },
    "csee-146": {
        "id": "csee-146",
        "course_id": "CS/EE 146",
        "name": "Control and Optimization of Networks",
        "units": "9 units (3-3-3)",
        "terms": "second term",
        "description": "This is a research-oriented course meant for undergraduates and beginning graduate students who want to learn about current research topics in networks such as the Internet, power networks, social networks, etc. The topics covered in the course will vary, but will be pulled from current research in the design, analysis, control, and optimization of networks.",
        "offered": true,
        "instructors": "Low",
        "link": "https://www.catalog.caltech.edu/current/2024-25/department/cs/#control-and-optimization-of-networks",
        "prereq_text": "Prerequisites: Ma 2, Ma 3 or instructor's permission.",
        "prereqs": [
            "ma-2102",
            "ma-3103"
        ]
    },
    "eecs-147": {
        "id": "eecs-147",
        "course_id": "EE/CS 147",
        "name": "Digital Ventures Design",
        "units": "9 units (3-3-3)",
        "terms": "first term",
        "description": "This course aims to offer the scientific foundations of analysis, design, development, and launching of innovative digital products and study elements of their success and failure. The course provides students with an opportunity to experience combined team-based design, engineering, and entrepreneurship. The lectures present a disciplined step-by-step approach to develop new ventures based on technological innovation in this space, and with invited speakers, cover topics such as market analysis, user/product interaction and design, core competency and competitive position, customer acquisition, business model design, unit economics and viability, and product planning. Throughout the term students will work within an interdisciplinary team of their peers to conceive an innovative digital product concept and produce a business plan and a working prototype. The course project culminates in a public presentation and a final report. Every year the course and projects focus on a particular emerging technology theme.\n Not offered 2024-25.",
        "offered": false,
        "instructors": "",
        "link": "https://www.catalog.caltech.edu/current/2024-25/department/cs/#digital-ventures-design",
        "prereq_text": "",
        "prereqs": []
    },
    "eecnscs-148": {
        "id": "eecnscs-148",
        "course_id": "EE/CNS/CS 148",
        "name": "Advanced Topics in Vision: Large Language and Vision Models",
        "units": "12 units (3-0-9)",
        "terms": "third term",
        "description": "",
        "offered": true,
        "instructors": "Perona, Gkioxari",
        "link": "https://www.catalog.caltech.edu/current/2024-25/department/cs/#advanced-topics-in-vision:-large-language-and-vision-models",
        "prereq_text": "Prerequisites: CMS/CS/CNS/EE/IDS 155, undergraduate calculus, linear algebra, statistics, computer programming, machine learning. Experience programming in Python, Numpy and PyTorch.",
        "prereqs": [
            "cmscscnseeids-155"
        ]
    },
    "csec-149": {
        "id": "csec-149",
        "course_id": "CS/Ec 149",
        "name": "Algorithmic Economics",
        "units": "9 units (3-0-6)",
        "terms": "third term",
        "description": "This course will equip students to engage with active research at the intersection of social and information sciences, including: algorithmic game theory and mechanism design; auctions; matching markets; and learning in games.",
        "offered": true,
        "instructors": "Niemeyer",
        "link": "https://www.catalog.caltech.edu/current/2024-25/department/cs/#algorithmic-economics",
        "prereq_text": "",
        "prereqs": []
    },
    "csids-150-ab": {
        "id": "csids-150-ab",
        "course_id": "CS/IDS 150 ab",
        "name": "Probability and Algorithms",
        "units": "9 units (3-0-6)",
        "terms": "first, third terms",
        "description": "Part a: The probabilistic method and randomized algorithms. Deviation bounds, k-wise independence, graph problems, identity testing, derandomization and parallelization, metric space embeddings, local lemma. Part b: Further topics such as weighted sampling, epsilon-biased sample spaces, advanced deviation inequalities, rapidly mixing Markov chains, analysis of boolean functions, expander graphs, and other gems in the design and analysis of probabilistic algorithms. Parts a & b are given in alternate years.",
        "offered": true,
        "instructors": "Schulman",
        "link": "https://www.catalog.caltech.edu/current/2024-25/department/cs/#probability-and-algorithms",
        "prereq_text": "Prerequisites: part a: CS 38 and Ma 5 abc; part b: part a or another introductory course in discrete probability.",
        "prereqs": [
            "ma-5105-abc",
            "cs-38"
        ]
    },
    "cs-151": {
        "id": "cs-151",
        "course_id": "CS 151",
        "name": "Complexity Theory",
        "units": "12 units (3-0-9)",
        "terms": "third term",
        "description": "This course describes a diverse array of complexity classes that are used to classify problems according to the computational resources (such as time, space, randomness, or parallelism) required for their solution. The course examines problems whose fundamental nature is exposed by this framework, the known relationships between complexity classes, and the numerous open problems in the area.",
        "offered": true,
        "instructors": "Umans",
        "link": "https://www.catalog.caltech.edu/current/2024-25/department/cs/#complexity-theory",
        "prereq_text": "Prerequisites: CS 21 and CS 38, or instructor's permission.",
        "prereqs": [
            "cs-21",
            "cs-38"
        ]
    },
    "cs-152": {
        "id": "cs-152",
        "course_id": "CS 152",
        "name": "Introduction to Cryptography",
        "units": "12 units (3-0-9)",
        "terms": "first term",
        "description": "This course is an introduction to the foundations of cryptography. The first part of the course introduces fundamental constructions in private-key cryptography, including one-way functions, pseudo-random generators and authentication, and in public-key cryptography, including trapdoor one-way functions, collision-resistant hash functions and digital signatures. The second part of the course covers selected topics such as interactive protocols and zero knowledge, the learning with errors problem and homomorphic encryption, and quantum cryptography: quantum money, quantum key distribution. The course is mostly theoretical and requires mathematical maturity. There will be a small programming component.",
        "offered": true,
        "instructors": "Mahadev",
        "link": "https://www.catalog.caltech.edu/current/2024-25/department/cs/#introduction-to-cryptography",
        "prereq_text": "Prerequisites: Ma 1 b, CS 21, CS 38 or equivalent recommended.",
        "prereqs": [
            "ma-1-d",
            "cs-21",
            "cs-38",
            "ma-1-abc"
        ]
    },
    "csids-153": {
        "id": "csids-153",
        "course_id": "CS/IDS 153",
        "name": "Current Topics in Theoretical Computer Science",
        "units": "9 units (3-0-6)",
        "terms": "first term",
        "description": "May be repeated for credit, with permission of the instructor. Students in this course will study an area of current interest in theoretical computer science. The lectures will cover relevant background material at an advanced level and present results from selected recent papers within that year's chosen theme. Students will be expected to read and present a research paper.",
        "offered": true,
        "instructors": "Umans",
        "link": "https://www.catalog.caltech.edu/current/2024-25/department/cs/#current-topics-in-theoretical-computer-science",
        "prereq_text": "Prerequisites: CS 21 and CS 38, or instructor's permission.",
        "prereqs": [
            "cs-21",
            "cs-38"
        ]
    },
    "cmscscnseeids-155": {
        "id": "cmscscnseeids-155",
        "course_id": "CMS/CS/CNS/EE/IDS 155",
        "name": "Machine Learning & Data Mining",
        "units": "12 units (3-3-6)",
        "terms": "second term",
        "description": "",
        "offered": true,
        "instructors": "Yue",
        "link": "https://www.catalog.caltech.edu/current/2024-25/department/cs/#machine-learning-&-data-mining",
        "prereq_text": "Prerequisites: CS/CNS/EE 156 a. Having a sufficient background in algorithms, linear algebra, calculus, probability, and statistics, is highly recommended.",
        "prereqs": [
            "cscnsee-156-ab"
        ]
    },
    "cscnsee-156-ab": {
        "id": "cscnsee-156-ab",
        "course_id": "CS/CNS/EE 156 ab",
        "name": "Learning Systems",
        "units": "9 units (3-1-5)",
        "terms": "first, third terms",
        "description": "Introduction to the theory, algorithms, and applications of automated learning. How much information is needed to learn a task, how much computation is involved, and how it can be accomplished. Special emphasis will be given to unifying the different approaches to the subject coming from statistics, function approximation, optimization, pattern recognition, and neural networks.",
        "offered": true,
        "instructors": "Abu-Mostafa",
        "link": "https://www.catalog.caltech.edu/current/2024-25/department/cs/#learning-systems",
        "prereq_text": "Prerequisites: Ma 2 and CS 2, or equivalent.",
        "prereqs": [
            "ma-2102",
            "cs-2"
        ]
    },
    "idsacmcs-157": {
        "id": "idsacmcs-157",
        "course_id": "IDS/ACM/CS 157",
        "name": "Statistical Inference",
        "units": "9 units (3-2-4)",
        "terms": "third term",
        "description": "Statistical Inference is a branch of mathematical engineering that studies ways of extracting reliable information from limited data for learning, prediction, and decision making in the presence of uncertainty. This is an introductory course on statistical inference. The main goals are: develop statistical thinking and intuitive feel for the subject; introduce the most fundamental ideas, concepts, and methods of statistical inference; and explain how and why they work, and when they don't. Topics covered include summarizing data, fundamentals of survey sampling, statistical functionals, jackknife, bootstrap, methods of moments and maximum likelihood, hypothesis testing, p-values, the Wald, Student's t-, permutation, and likelihood ratio tests, multiple testing, scatterplots, simple linear regression, ordinary least squares, interval estimation, prediction, graphical residual analysis.",
        "offered": true,
        "instructors": "Zuev",
        "link": "https://www.catalog.caltech.edu/current/2024-25/department/cs/#statistical-inference",
        "prereq_text": "Prerequisites: ACM/EE/IDS 116, Ma 3.",
        "prereqs": [
            "acmeeids-116",
            "ma-3103"
        ]
    },
    "idsacmcs-158": {
        "id": "idsacmcs-158",
        "course_id": "IDS/ACM/CS 158",
        "name": "Fundamentals of Statistical Learning",
        "units": "9 units (3-3-3)",
        "terms": "second term",
        "description": "The main goal of the course is to provide an introduction to the central concepts and core methods of statistical learning, an interdisciplinary field at the intersection of applied mathematics, statistical inference, and machine learning. The course focuses on the mathematics and statistics of methods developed for learning from data. Students will learn what methods for statistical learning exist, how and why they work (not just what tasks they solve and in what built-in functions they are implemented), and when they are expected to perform poorly. The course is oriented for upper level undergraduate students in IDS, ACM, and CS and graduate students from other disciplines who have sufficient background in linear algebra, probability, and statistics. The course is a natural continuation of IDS/ACM/CS 157 and it can be viewed as a statistical analog of CMS/CS/CNS/EE/IDS 155. Topics covered include elements of statistical decision theory, regression and classification problems, nearest-neighbor methods, curse of dimensionality, linear regression, model selection, cross-validation, subset selection, shrinkage methods, ridge regression, LASSO, logistic regression, linear and quadratic discriminant analysis, support-vector machines, tree-based methods, bagging, and random forests.\n Not offered 2024-25.",
        "offered": false,
        "instructors": "Zuev",
        "link": "https://www.catalog.caltech.edu/current/2024-25/department/cs/#fundamentals-of-statistical-learning",
        "prereq_text": "Prerequisites: ACM/IDS 104, ACM/EE/IDS 116, IDS/ACM/CS 157.",
        "prereqs": [
            "acmeeids-116",
            "acmids-104",
            "idsacmcs-157"
        ]
    },
    "cscnseeids-159": {
        "id": "cscnseeids-159",
        "course_id": "CS/CNS/EE/IDS 159",
        "name": "Advanced Topics in Machine Learning",
        "units": "9 units (3-0-6)",
        "terms": "third term",
        "description": "This course focuses on current topics in machine learning research. This is a paper reading course, and students are expected to understand material directly from research articles. Students are also expected to present in class, and to do a final project.",
        "offered": true,
        "instructors": "Yue",
        "link": "https://www.catalog.caltech.edu/current/2024-25/department/cs/#advanced-topics-in-machine-learning",
        "prereq_text": "Prerequisites: CS 155; strong background in statistics, probability theory, algorithms, and linear algebra; background in optimization is a plus as well.",
        "prereqs": []
    },
    "eecsids-160": {
        "id": "eecsids-160",
        "course_id": "EE/CS/IDS 160",
        "name": "Fundamentals of Information Transmission and Storage",
        "units": "9 units (3-0-6)",
        "terms": "second term",
        "description": "Basics of information theory: entropy, mutual information, source and channel coding theorems. Basics of coding theory: error-correcting codes for information transmission and storage, block codes, algebraic codes, sparse graph codes. Basics of digital communications: sampling, quantization, digital modulation, matched filters, equalization.",
        "offered": true,
        "instructors": "Kostina",
        "link": "https://www.catalog.caltech.edu/current/2024-25/department/cs/#fundamentals-of-information-transmission-and-storage",
        "prereq_text": "Prerequisites: EE 55 or equivalent.",
        "prereqs": [
            "ee-55"
        ]
    },
    "eecs-161": {
        "id": "eecs-161",
        "course_id": "EE/CS 161",
        "name": "Big Data Networks",
        "units": "9 units (3-0-6)",
        "terms": "third term",
        "description": "Next generation networks will have tens of billions of nodes forming cyber-physical systems and the Internet of Things. A number of fundamental scientific and technological challenges must be overcome to deliver on this vision. This course will focus on (1) How to boost efficiency and reliability in large networks; the role of network coding, distributed storage, and distributed caching; (2) How to manage wireless access on a massive scale; modern random access and topology formation techniques; and (3) New vistas in big data networks, including distributed computing over networks and crowdsourcing. A selected subset of these problems, their mathematical underpinnings, state-of-the-art solutions, and challenges ahead will be covered.\n Not offered 2024-25.",
        "offered": false,
        "instructors": "",
        "link": "https://www.catalog.caltech.edu/current/2024-25/department/cs/#big-data-networks",
        "prereq_text": "Prerequisites: Linear Algebra ACM/IDS 104 and Introduction to Probability Models ACM/EE/IDS 116 or their equivalents.",
        "prereqs": [
            "acmeeids-116",
            "acmids-104"
        ]
    },
    "csids-162": {
        "id": "csids-162",
        "course_id": "CS/IDS 162",
        "name": "Data, Algorithms and Society",
        "units": "9 units (3-0-6)",
        "terms": "second term",
        "description": "This course examines algorithms and data practices in fields such as machine learning, privacy, and communication networks through a social lens. We will draw upon theory and practices from art, media, computer science and technology studies to critically analyze algorithms and their implementations within society. The course includes projects, lectures, readings, and discussions. Students will learn mathematical formalisms, critical thinking and creative problem solving to connect algorithms to their practical implementations within social, cultural, economic, legal and political contexts. Enrollment by application. Taught concurrently with VC 72 and can only be taken once as CS/IDS 162 or VC 72.",
        "offered": true,
        "instructors": "Mushkin, Ralph",
        "link": "https://www.catalog.caltech.edu/current/2024-25/department/cs/#data,-algorithms-and-society",
        "prereq_text": "Prerequisites: CS 38 and CS 155 or 156 a.",
        "prereqs": [
            "cs-38"
        ]
    },
    "cs-163": {
        "id": "cs-163",
        "course_id": "CS 163",
        "name": "Projects in Machine Learning",
        "units": "9 units (0-1-8)",
        "terms": "first",
        "description": "This is a project-based course for students looking to gain practical experience in machine learning. Students are expected to be proficient in basic machine learning. Students will work in groups. Each group will be provided a project topic to work on along with domain expert advisors.",
        "offered": true,
        "instructors": "Bouman",
        "link": "https://www.catalog.caltech.edu/current/2024-25/department/cs/#projects-in-machine-learning",
        "prereq_text": "Prerequisites: CS 155 or equivalent.",
        "prereqs": []
    },
    "cs-164": {
        "id": "cs-164",
        "course_id": "CS 164",
        "name": "Compilers",
        "units": "9 units (3-0-6)",
        "terms": "first term",
        "description": "This course covers the construction of compilers: programs which convert program source code to machine code which is directly executable on modern hardware. The course takes a bottom-up approach: a series of compilers will be built, all of which generate assembly code for x86 processors, with each compiler adding features. The final compiler will compile a full-fledged high-level programming language to assembly language. Topics covered include register allocation, conditionals, loops and dataflow analysis, garbage collection, lexical scoping, and type checking. This course is programming intensive. All compilers will be written in the OCaml programming language.",
        "offered": true,
        "instructors": "Vanier",
        "link": "https://www.catalog.caltech.edu/current/2024-25/department/cs/#compilers",
        "prereq_text": "Prerequisites: CS 4 or instructor's permission. CS 24 and CS 131 are strongly recommended but not required. Limit 20 students.",
        "prereqs": [
            "cs-4",
            "cs-24",
            "cs-131"
        ]
    },
    "cscnseeids-165": {
        "id": "cscnseeids-165",
        "course_id": "CS/CNS/EE/IDS 165",
        "name": "Foundations of Machine Learning and Statistical Inference",
        "units": "12 units (3-3-6)",
        "terms": "second term",
        "description": "The course assumes students are comfortable with analysis, probability, statistics, and basic programming. This course will cover core concepts in machine learning and statistical inference. The ML concepts covered are spectral methods (matrices and tensors), non-convex optimization, probabilistic models, neural networks, representation theory, and generalization. In statistical inference, the topics covered are detection and estimation, sufficient statistics, Cramer-Rao bounds, Rao-Blackwell theory, variational inference, and multiple testing. In addition to covering the core concepts, the course encourages students to ask critical questions such as: How relevant is theory in the age of deep learning? What are the outstanding open problems? Assignments will include exploring failure modes of popular algorithms, in addition to traditional problem-solving type questions.",
        "offered": true,
        "instructors": "Anandkumar",
        "link": "https://www.catalog.caltech.edu/current/2024-25/department/cs/#foundations-of-machine-learning-and-statistical-inference",
        "prereq_text": "Prerequisites: CMS/ACM/EE 122, ACM/EE/IDS 116, CS 156 a, ACM/CS/IDS 157 or instructor's permission.",
        "prereqs": [
            "acmeeids-116",
            "cmsacmee-122"
        ]
    },
    "cseeids-166": {
        "id": "cseeids-166",
        "course_id": "CS/EE/IDS 166",
        "name": "Computational Cameras",
        "units": "12 units (3-3-6)",
        "terms": "third term",
        "description": "Computational cameras overcome the limitations of traditional cameras, by moving part of the image formation process from hardware to software. In this course, we will study this emerging multi-disciplinary field at the intersection of signal processing, applied optics, computer graphics, and vision. At the start of the course, we will study modern image processing and image editing pipelines, including those encountered on DSLR cameras and mobile phones. Then we will study the physical and computational aspects of tasks such as coded photography, light-field imaging, astronomical imaging, medical imaging, and time-of-flight cameras. The course has a strong hands-on component, in the form of homework assignments and a final project. In the homework assignments, students will have the opportunity to implement many of the techniques covered in the class. Example homework assignments include building an end-to-end HDR (High Dynamic Range) imaging pipeline, implementing Poisson image editing, refocusing a light-field image, and making your own lensless \"scotch-tape\" camera.\n Not offered 2024-25",
        "offered": false,
        "instructors": "Bouman",
        "link": "https://www.catalog.caltech.edu/current/2024-25/department/cs/#computational-cameras",
        "prereq_text": "Prerequisites: ACM 104 or ACM 107 or equivalent.",
        "prereqs": []
    },
    "eecsids-167": {
        "id": "eecsids-167",
        "course_id": "EE/CS/IDS 167",
        "name": "Introduction to Data Compression and Storage",
        "units": "9 units (3-0-6)",
        "terms": "third term",
        "description": "The course will introduce the students to the basic principles and techniques of codes for data compression and storage. The students will master the basic algorithms used for lossless and lossy compression of digital and analog data and the major ideas behind coding for flash memories. Topics include the Huffman code, the arithmetic code, Lempel-Ziv dictionary techniques, scalar and vector quantizers, transform coding; codes for constrained storage systems.\n Given in alternate years; not offered 2024-25.",
        "offered": true,
        "instructors": "",
        "link": "https://www.catalog.caltech.edu/current/2024-25/department/cs/#introduction-to-data-compression-and-storage",
        "prereq_text": "Prerequisites: Ma 3 or ACM/EE/IDS 116.",
        "prereqs": [
            "acmeeids-116",
            "ma-3103"
        ]
    },
    "mecsee-169": {
        "id": "mecsee-169",
        "course_id": "ME/CS/EE 169",
        "name": "Mobile Robots",
        "units": "9 units (1-7-1)",
        "terms": "third term",
        "description": "Mobile robots need to perceive their environment and localize themselves with respect to maps thereof. They further require planners to move along collision-free paths. This course builds up mobile robots in team-based projects. Teams will write all necessary software from low-level hardware I/O to high level algorithms, using the robotic operating system (ROS). The final systems will autonomously maneuver to reach their goals or track various objectives.",
        "offered": true,
        "instructors": "Niemeyer",
        "link": "https://www.catalog.caltech.edu/current/2024-25/department/cs/#mobile-robots",
        "prereq_text": "Prerequisites: ME/CS/EE 133 b, or with permission of instructor.",
        "prereqs": [
            "mecsee-133-ab"
        ]
    },
    "cscns-171": {
        "id": "cscns-171",
        "course_id": "CS/CNS 171",
        "name": "Computer Graphics Laboratory",
        "units": "12 units (3-6-3)",
        "terms": "first term",
        "description": "This is a challenging course that introduces the basic ideas behind computer graphics and some of its fundamental algorithms. Topics include graphics input and output, the graphics pipeline, sampling and image manipulation, three-dimensional transformations and interactive modeling, basics of physically based modeling and animation, simple shading models and their hardware implementation, and some of the fundamental algorithms of scientific visualization. Students will be required to perform significant implementations.",
        "offered": true,
        "instructors": "Barr",
        "link": "https://www.catalog.caltech.edu/current/2024-25/department/cs/#computer-graphics-laboratory",
        "prereq_text": "Prerequisites: Extensive programming experience and proficiency in linear algebra, starting with CS 2 and Ma 1 b.",
        "prereqs": [
            "ma-1-d",
            "cs-2",
            "ma-1-abc"
        ]
    },
    "csids-172": {
        "id": "csids-172",
        "course_id": "CS/IDS 172",
        "name": "Distributed Computing",
        "units": "9 units (3-2-4)",
        "terms": "first term",
        "description": "Programming distributed systems. Mechanics for cooperation among concurrent agents. Programming sensor networks and cloud computing applications. Applications of machine learning and statistics by using parallel computers to aggregate and analyze data streams from sensors.",
        "offered": true,
        "instructors": "Chandy",
        "link": "https://www.catalog.caltech.edu/current/2024-25/department/cs/#distributed-computing",
        "prereq_text": "Prerequisites: CS 24, CS 38.",
        "prereqs": [
            "cs-24",
            "cs-38"
        ]
    },
    "cscns-174": {
        "id": "cscns-174",
        "course_id": "CS/CNS 174",
        "name": "Computer Graphics Projects",
        "units": "12 units (3-6-3)",
        "terms": "third term",
        "description": "This laboratory class offers students an opportunity for independent work including recent computer graphics research. In coordination with the instructor, students select a computer graphics modeling, rendering, interaction, or related algorithm and implement it. Students are required to present their work in class and discuss the results of their implementation and possible improvements to the basic methods. May be repeated for credit with instructor's permission.\n Not offered 2024-25.",
        "offered": false,
        "instructors": "Barr",
        "link": "https://www.catalog.caltech.edu/current/2024-25/department/cs/#computer-graphics-projects",
        "prereq_text": "Prerequisites: Extensive programming experience, CS/CNS 171 or instructor's permission.",
        "prereqs": []
    },
    "eecsmede-175": {
        "id": "eecsmede-175",
        "course_id": "EE/CS/MedE 175",
        "name": "Advanced Topics in Digital Design with FPGAs and VHDL",
        "units": "9 units (3-6-0)",
        "terms": "third term",
        "description": "Quick review of the VHDL language and RTL concepts. Dealing with sophisticated, multi-dimensional data types in VHDL. Dealing with multiple time domains. Transfer of control versus data between clock domains. Clock division and multiplication. Using PLLs. Dealing with global versus local and synchronous versus asynchronous resets. How to measure maximum speed in FPGAs (for both registered and unregistered circuits). The (often) hard task of time closure. The subtleties of the time behavior in state machines (a major source of errors in large, complex designs). Introduction to simulation. Construction of VHDL testbenches for automated testing. Dealing with files in simulation. All designs are physically implemented using FPGA boards.\n Not offered 2024-25.",
        "offered": false,
        "instructors": "Staff",
        "link": "https://www.catalog.caltech.edu/current/2024-25/department/cs/#advanced-topics-in-digital-design-with-fpgas-and-vhdl",
        "prereq_text": "Prerequisites: EE/CS/MedE 125 or equivalent.",
        "prereqs": []
    },
    "cs-176": {
        "id": "cs-176",
        "course_id": "CS 176",
        "name": "Computer Graphics Research",
        "units": "9 units (3-3-3)",
        "terms": "second term",
        "description": "The course will go over recent research results in computer graphics, covering subjects from mesh processing (acquisition, compression, smoothing, parameterization, adaptive meshing), simulation for purposes of animation, rendering (both photo- and nonphotorealistic), geometric modeling primitives (image based, point based), and motion capture and editing. Other subjects may be treated as they appear in the recent literature. The goal of the course is to bring students up to the frontiers of computer graphics research and prepare them for their own research.\n Not offered 2024-25.",
        "offered": false,
        "instructors": "Staff",
        "link": "https://www.catalog.caltech.edu/current/2024-25/department/cs/#computer-graphics-research",
        "prereq_text": "Prerequisites: CS/CNS 171, or 173, or 174.",
        "prereqs": []
    },
    "csacm-177-ab": {
        "id": "csacm-177-ab",
        "course_id": "CS/ACM 177 ab",
        "name": "Discrete Differential Geometry: Theory and Applications",
        "units": "9 units (3-3-3)",
        "terms": "second term",
        "description": "Working knowledge of multivariate calculus and linear algebra as well as fluency in some implementation language is expected. Subject matter covered: differential geometry of curves and surfaces, classical exterior calculus, discrete exterior calculus, sampling and reconstruction of differential forms, low dimensional algebraic and computational topology, Morse theory, Noether's theorem, Helmholtz-Hodge decomposition, structure preserving time integration, connections and their curvatures on complex line bundles. Applications include elastica and rods, surface parameterization, conformal surface deformations, computation of geodesics, tangent vector field design, connections, discrete thin shells, fluids, electromagnetism, and elasticity.\n Not offered 2024-25.",
        "offered": false,
        "instructors": "Staff",
        "link": "https://www.catalog.caltech.edu/current/2024-25/department/cs/#discrete-differential-geometry:-theory-and-applications",
        "prereq_text": "",
        "prereqs": []
    },
    "csids-178": {
        "id": "csids-178",
        "course_id": "CS/IDS 178",
        "name": "Numerical Algorithms and their Implementation",
        "units": "9 units (3-3-3)",
        "terms": "third term",
        "description": "This course gives students the understanding necessary to choose and implement basic numerical algorithms as needed in everyday programming practice. Concepts include: sources of numerical error, stability, convergence, ill-conditioning, and efficiency. Algorithms covered include solution of linear systems (direct and iterative methods), orthogonalization, SVD, interpolation and approximation, numerical integration, solution of ODEs and PDEs, transform methods (Fourier, Wavelet), and low rank approximation such as multipole expansions.\n Not offered 2024-25.",
        "offered": false,
        "instructors": "Staff",
        "link": "https://www.catalog.caltech.edu/current/2024-25/department/cs/#numerical-algorithms-and-their-implementation",
        "prereq_text": "Prerequisites: CS 2.",
        "prereqs": [
            "cs-2"
        ]
    },
    "cs-179": {
        "id": "cs-179",
        "course_id": "CS 179",
        "name": "GPU Programming",
        "units": "9 units (3-3-3)",
        "terms": "third term",
        "description": "Some experience with computer graphics algorithms preferred. The use of Graphics Processing Units for computer graphics rendering is well known, but their power for general parallel computation is only recently being explored. Parallel algorithms running on GPUs can often achieve up to 100x speedup over similar CPU algorithms. This course covers programming techniques for the Graphics processing unit, focusing on visualization and simulation of various systems. Labs will cover specific applications in graphics, mechanics, and signal processing. The course will use nVidia's parallel computing architecture, CUDA. Labwork requires extensive programming.",
        "offered": true,
        "instructors": "Barr",
        "link": "https://www.catalog.caltech.edu/current/2024-25/department/cs/#gpu-programming",
        "prereq_text": "Prerequisites: Good working knowledge of C/C++.",
        "prereqs": []
    },
    "cs-180": {
        "id": "cs-180",
        "course_id": "CS 180",
        "name": "Master\u2019s Thesis Research",
        "units": "",
        "terms": "",
        "description": "",
        "offered": true,
        "instructors": "Staff",
        "link": "https://www.catalog.caltech.edu/current/2024-25/department/cs/#master\u2019s-thesis-research",
        "prereq_text": "",
        "prereqs": []
    },
    "bibecs-183": {
        "id": "bibecs-183",
        "course_id": "Bi/BE/CS 183",
        "name": "Introduction to Computational Biology and Bioinformatics",
        "units": "9 units (3-0-6)",
        "terms": "third term",
        "description": "Biology is becoming an increasingly data-intensive science. Many of the data challenges in the biological sciences are distinct from other scientific disciplines because of the complexity involved. This course will introduce key computational, probabilistic, and statistical methods that are common in computational biology and bioinformatics. We will integrate these theoretical aspects to discuss solutions to common challenges that reoccur throughout bioinformatics including algorithms and heuristics for tackling DNA sequence alignments, phylogenetic reconstructions, evolutionary analysis, and population and human genetics. We will discuss these topics in conjunction with common applications including the analysis of high throughput DNA sequencing data sets and analysis of gene expression from RNA-Seq data sets.",
        "offered": true,
        "instructors": "Guttman, Thomson",
        "link": "https://www.catalog.caltech.edu/current/2024-25/department/cs/#introduction-to-computational-biology-and-bioinformatics",
        "prereq_text": "Prerequisites: Bi 8, CS 2, Ma 3; or BE/Bi 103 a; or instructor's permission.",
        "prereqs": [
            "cs-2",
            "ma-3103"
        ]
    },
    "cnsbieecsnb-186": {
        "id": "cnsbieecsnb-186",
        "course_id": "CNS/Bi/EE/CS/NB 186",
        "name": "Vision: From Computational Theory to Neuronal Mechanisms",
        "units": "12 units (4-4-4)",
        "terms": "Second term",
        "description": "Lecture, laboratory, and project course aimed at understanding visual information processing, in both machines and the mammalian visual system. The course will emphasize an interdisciplinary approach aimed at understanding vision at several levels: computational theory, algorithms, psychophysics, and hardware (i.e., neuroanatomy and neurophysiology of the mammalian visual system). The course will focus on early vision processes, in particular motion analysis, binocular stereo, brightness, color and texture analysis, visual attention and boundary detection. Students will be required to hand in approximately three homework assignments as well as complete one project integrating aspects of mathematical analysis, modeling, physiology, psychophysics, and engineering.\n Given in alternate years; not offered 2024-25.",
        "offered": true,
        "instructors": "Meister, Perona, Shimojo",
        "link": "https://www.catalog.caltech.edu/current/2024-25/department/cs/#vision:-from-computational-theory-to-neuronal-mechanisms",
        "prereq_text": "",
        "prereqs": []
    },
    "cnsbiphcsnb-187": {
        "id": "cnsbiphcsnb-187",
        "course_id": "CNS/Bi/Ph/CS/NB 187",
        "name": "Neural Computation",
        "units": "9 units (3-0-6)",
        "terms": "third term",
        "description": "This course aims at a quantitative understanding of how the nervous system computes. The goal is to link phenomena across scales from membrane proteins to cells, circuits, brain systems, and behavior. We will learn how to formulate these connections in terms of mathematical models, how to test these models experimentally, and how to interpret experimental data quantitatively. The concepts will be developed with motivation from some of the fascinating phenomena of animal behavior, such as: aerobatic control of insect flight, precise localization of sounds, sensing of single photons, reliable navigation and homing, rapid decision-making during escape, one-shot learning, and large-capacity recognition memory.\n Not offered 2024-25.",
        "offered": false,
        "instructors": "Meister",
        "link": "https://www.catalog.caltech.edu/current/2024-25/department/cs/#neural-computation",
        "prereq_text": "Prerequisites: introductory neuroscience (Bi 150 or equivalent); mathematical methods (Bi 195 or equivalent); scientific programming.",
        "prereqs": []
    },
    "becscnsbi-191-ab": {
        "id": "becscnsbi-191-ab",
        "course_id": "BE/CS/CNS/Bi 191 ab",
        "name": "Biomolecular Computation",
        "units": "9 units (3-0-6) a; (2-4-3) b",
        "terms": "second, third terms",
        "description": "This course investigates computation by molecular systems, emphasizing models of computation based on the underlying physics, chemistry, and organization of biological cells. We will explore programmability, complexity, simulation of, and reasoning about abstract models of chemical reaction networks, molecular folding, molecular self-assembly, and molecular motors, with an emphasis on universal architectures for computation, control, and construction within molecular systems. If time permits, we will also discuss biological example systems such as signal transduction, genetic regulatory networks, and the cytoskeleton; physical limits of computation, reversibility, reliability, and the role of noise, DNA-based computers and DNA nanotechnology. Part a develops fundamental results; part b is a reading and research course: classic and current papers will be discussed, and students will do projects on current research topics.",
        "offered": true,
        "instructors": "Winfree",
        "link": "https://www.catalog.caltech.edu/current/2024-25/department/cs/#biomolecular-computation",
        "prereq_text": "Prerequisites: None. Recommended: BE/ChE 163, CS 21, or equivalent.",
        "prereqs": [
            "cs-21"
        ]
    },
    "becs-196-ab": {
        "id": "becs-196-ab",
        "course_id": "BE/CS 196 ab",
        "name": "Design and Construction of Programmable Molecular Systems",
        "units": "a is 12 units (2-4-6) ; b is 9 units (2-4-3)",
        "terms": "a is second term; b is third term.",
        "description": "This course will introduce students to the conceptual frameworks and tools of computer science as applied to molecular engineering, as well as to the practical realities of synthesizing and testing their designs in the laboratory. In part a, students will design and construct DNA circuits and self-assembled DNA nanostructures, as well as quantitatively analyze the designs and the experimental data. Students will learn laboratory techniques including fluorescence spectroscopy and atomic force microscopy and will use software tools and program in Mathematica. Part b is an open-ended design and build project requiring instructor's permission for enrollment. Limited enrollment.",
        "offered": true,
        "instructors": "Qian",
        "link": "https://www.catalog.caltech.edu/current/2024-25/department/cs/#design-and-construction-of-programmable-molecular-systems",
        "prereq_text": "Prerequisites: none.",
        "prereqs": []
    },
    "phcs-219-abc": {
        "id": "phcs-219-abc",
        "course_id": "Ph/CS 219 abc",
        "name": "Quantum Computation",
        "units": "9 units (3-0-6)",
        "terms": "first, second, third terms",
        "description": "The theory of quantum information and quantum computation. Overview of classical information theory, compression of quantum information, transmission of quantum information through noisy channels, quantum error-correcting codes, quantum cryptography and teleportation. Overview of classical complexity theory, quantum complexity, efficient quantum algorithms, fault-tolerant quantum computation, physical implementations of quantum computation.",
        "offered": true,
        "instructors": "Kitaev, Preskill",
        "link": "https://www.catalog.caltech.edu/current/2024-25/department/cs/#quantum-computation",
        "prereq_text": "Prerequisites: Ph 125 ab or equivalent.",
        "prereqs": [
            "ph-125-abc"
        ]
    },
    "cs-274-abc": {
        "id": "cs-274-abc",
        "course_id": "CS 274 abc",
        "name": "Topics in Computer Graphics",
        "units": "9 units (3-3-3)",
        "terms": "first, second, third terms",
        "description": "Each term will focus on some topic in computer graphics, such as geometric modeling, rendering, animation, human-computer interaction, or mathematical foundations. The topics will vary from year to year. May be repeated for credit with instructor's permission.\n Not offered 2024-25.",
        "offered": false,
        "instructors": "Staff",
        "link": "https://www.catalog.caltech.edu/current/2024-25/department/cs/#topics-in-computer-graphics",
        "prereq_text": "Prerequisites: instructor's permission.",
        "prereqs": []
    },
    "cs-280": {
        "id": "cs-280",
        "course_id": "CS 280",
        "name": "Research in Computer Science",
        "units": "",
        "terms": "",
        "description": "Approval of student's research adviser and option adviser must be obtained before registering.",
        "offered": true,
        "instructors": "Staff",
        "link": "https://www.catalog.caltech.edu/current/2024-25/department/cs/#research-in-computer-science",
        "prereq_text": "",
        "prereqs": []
    },
    "cs-282-abc": {
        "id": "cs-282-abc",
        "course_id": "CS 282 abc",
        "name": "Reading in Computer Science",
        "units": "6 units or more by arrangement",
        "terms": "first, second, third terms",
        "description": "Instructor's permission required.",
        "offered": true,
        "instructors": "Staff",
        "link": "https://www.catalog.caltech.edu/current/2024-25/department/cs/#reading-in-computer-science",
        "prereq_text": "",
        "prereqs": []
    },
    "cs-286-abc": {
        "id": "cs-286-abc",
        "course_id": "CS 286 abc",
        "name": "Seminar in Computer Science",
        "units": "3, 6, or 9 units, at the instructor's discretion",
        "terms": "",
        "description": "Instructor's permission required.\n Not offered 2024-25.",
        "offered": false,
        "instructors": "Staff",
        "link": "https://www.catalog.caltech.edu/current/2024-25/department/cs/#seminar-in-computer-science",
        "prereq_text": "",
        "prereqs": []
    },
    "cs-287": {
        "id": "cs-287",
        "course_id": "CS 287",
        "name": "Center for the Mathematics of Information Seminar",
        "units": "3, 6, or 9 units, at the instructor's discretion",
        "terms": "first, second, third terms",
        "description": "Instructor's permission required.\n Not offered 2024-25.",
        "offered": false,
        "instructors": "Staff",
        "link": "https://www.catalog.caltech.edu/current/2024-25/department/cs/#center-for-the-mathematics-of-information-seminar",
        "prereq_text": "",
        "prereqs": []
    }
}